{"version":3,"sources":["data/pianoNot.mp3","redux/actions.js","presentational/Buttons.js","container/Break.js","presentational/Clock.js","container/Clock.js","presentational/Controls.js","container/Controls.js","container/Sesion.js","presentational/Progress.js","container/Progres.js","presentational/Layout.js","redux/reducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","timer","startPause","type","tickSesion","dispatch","getState","_getState2","clockTimeSeconds","working","clockTimeMinutes","clearInterval","stopClock","resetSesion","setInterval","tickBreak","_getState3","breakTimeMinutes","breakTimeSeconds","stopBreak","resetBreak","Buttons","_ref","length","onClickDecrease","onClickIncrease","title","react_default","a","createElement","Segment","Header","as","Button","color","onClick","animated","Content","visible","hidden","style","fontSize","BreakContainer","_this$props","this","props","breakLength","Buttons_Buttons","Component","connect","state","Clock","minutes","seconds","name","inverted","tertiary","src","audio","autoPlay","ClockContainer","showBreak","Clock_Clock","Controls","onClickReset","onClickStartPause","content","icon","labelPosition","ControlsContainer","Controls_Controls","_getState","showClock","SesionContainer","sesionLength","Progres","procent","Progress","percent","indicating","ProgresContainer","console","log","Progress_Progres","Layout","Responsive","className","Group","maxWidth","Break","container_Clock","Sesion","minWidth","horizontal","container_Progres","container_Controls","defaultState","store","createStore","arguments","undefined","Object","objectSpread","applyMiddleware","thunk","App","es","Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1915275.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pianoNot.dabc3535.mp3\";","// break and sesion buttons\r\nexport const hendleBreakDecrease = () => {\r\n  return {\r\n    type: \"breakdecrease\"\r\n  };\r\n};\r\n\r\nexport const hendleBreakIncrease = () => {\r\n  return {\r\n    type: \"breakincrease\"\r\n  };\r\n};\r\n\r\nexport const hendleSesionDecrease = () => {\r\n  return {\r\n    type: \"sesiondecrease\"\r\n  };\r\n};\r\n\r\nexport const hendleSesionIncrease = () => {\r\n  return {\r\n    type: \"sesionincrease\"\r\n  };\r\n};\r\n\r\n//reset button\r\nconst reset = () => {\r\n  return {\r\n    type: \"reset\"\r\n  };\r\n};\r\n\r\nexport const hendleReset = () => dispatch => {\r\n  clearInterval(timer);\r\n  dispatch(reset());\r\n};\r\n\r\n//stop start button\r\n\r\nlet timer = null;\r\nexport const hendleStartPause = () => (dispatch, getState) => {\r\n  const { showClock, showBreak, working } = getState();\r\n  if (!working && showClock) {\r\n    clearInterval(timer);\r\n    timer = setInterval(() => dispatch(tickSesion()), 1000);\r\n    dispatch(startPause());\r\n    dispatch(tickSesion()); //first tick\r\n  } else if (!working && showBreak) {\r\n    clearInterval(timer);\r\n    timer = setInterval(() => dispatch(tickBreak()), 1000);\r\n    dispatch(startPause());\r\n    dispatch(tickBreak()); //first tick\r\n  } else {\r\n    clearInterval(timer);\r\n    dispatch(startPause());\r\n  }\r\n};\r\nconst startPause = () => {\r\n  return {\r\n    type: \"startpause\"\r\n  };\r\n};\r\n\r\nconst tickSesion = () => (dispatch, getState) => {   //sesion clocks seconds\r\n  const { clockTimeSeconds, working, clockTimeMinutes } = getState();\r\n  dispatch({\r\n    type: \"ticksesion\"\r\n  });\r\n  if (working && clockTimeSeconds < 1 && clockTimeMinutes < 1) {\r\n    clearInterval(timer);\r\n    dispatch(stopClock());\r\n    dispatch(resetSesion());\r\n    timer = setInterval(() => dispatch(tickBreak()), 1000);\r\n  }\r\n};\r\nconst stopClock = () => {\r\n  return {\r\n    type: \"stopclock\"\r\n  };\r\n};\r\nconst resetSesion = () => {\r\n  return {\r\n    type: \"resetsesion\"\r\n  }\r\n}\r\n\r\nconst tickBreak = () => (dispatch, getState) => {      //break clocks seconds\r\n  const { breakTimeMinutes, breakTimeSeconds, working } = getState();\r\n  dispatch({\r\n    type: \"tickbreak\"\r\n  });\r\n  if (working && breakTimeMinutes < 1 && breakTimeSeconds < 1) {\r\n    clearInterval(timer);\r\n    dispatch(stopBreak());\r\n    dispatch(resetBreak());\r\n    timer = setInterval(() => dispatch(tickSesion()), 1000);\r\n  }\r\n};\r\nconst stopBreak = () => {\r\n  return {\r\n    type: \"stopbreak\"\r\n  };\r\n};\r\nconst resetBreak = () => {\r\n  return {\r\n    type: \"resetbreak\"\r\n  }\r\n}","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Segment,\r\n  Label,\r\n  Responsive,\r\n  Transition\r\n} from \"semantic-ui-react\";\r\n\r\nexport const Buttons = ({\r\n  length,\r\n  onClickDecrease,\r\n  onClickIncrease,\r\n  title\r\n}) => (\r\n  <Segment>\r\n    <Header as=\"h3\">{title}</Header>\r\n    <Button color=\"grey\" onClick={onClickDecrease} animated>\r\n      <Button.Content visible>Decrease</Button.Content>\r\n      <Button.Content hidden>Min 1 min</Button.Content>\r\n    </Button>\r\n    <span style={{fontSize: \"1.5em\"}}>{length + \" \"}</span>\r\n    <Button color=\"grey\" onClick={onClickIncrease} animated>\r\n      <Button.Content visible>Increase</Button.Content>\r\n      <Button.Content hidden>Max 60 min</Button.Content>\r\n    </Button>\r\n  </Segment>\r\n);\r\n","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { hendleBreakDecrease, hendleBreakIncrease } from '../redux/actions';\r\nimport { Buttons } from \"../presentational/Buttons\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickDecrease: function(){\r\n            dispatch(hendleBreakDecrease())\r\n        },\r\n        onClickIncrease: function(){\r\n            dispatch(hendleBreakIncrease())\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        breakLength: state.breakLength\r\n    }\r\n}\r\n\r\nclass BreakContainer extends Component  {\r\n    render() {\r\n        const {onClickDecrease, onClickIncrease, breakLength} = this.props;\r\n        return (\r\n             <Buttons onClickDecrease={onClickDecrease} onClickIncrease={onClickIncrease} length={breakLength} title={\"Break Length\"}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BreakContainer);","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Segment,\r\n  Label,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\nimport audio from '../data/pianoNot.mp3';\r\n\r\nexport const Clock = ({minutes, seconds, name}) => (\r\n    <Segment inverted={minutes < 1 && seconds < 40 ? true : false} \r\n      color={minutes < 1 ? 'red': 'green'}\r\n      tertiary={minutes < 1 && seconds < 40 && seconds > 25 ? true:false}\r\n      \r\n      >\r\n      <Header as='h3'>{name}</Header>\r\n      <span style={{fontSize: \"1.5em\"}}>{minutes} : {seconds}</span>\r\n      {minutes < 1 && seconds < 1 ? <audio src={audio} autoPlay /> : null}\r\n    </Segment>\r\n  \r\n);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Clock } from \"../presentational/Clock\";\r\nimport { Segment } from \"semantic-ui-react\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  if (state.showBreak) {\r\n    return {\r\n      minutes: state.breakTimeMinutes,\r\n      seconds: state.breakTimeSeconds,\r\n      showBreak: state.showBreak\r\n    };\r\n  } else {\r\n    return {\r\n      minutes: state.clockTimeMinutes,\r\n      seconds: state.clockTimeSeconds\r\n    };\r\n  }\r\n};\r\nclass ClockContainer extends Component {\r\n  render() {\r\n    const name = [\"Clock\", \"Break\"];\r\n    const { minutes, seconds, showBreak } = this.props;\r\n    return (\r\n  \r\n      <Clock\r\n        minutes={minutes < 10 ? \"0\" + minutes : minutes}\r\n        seconds={seconds < 10 ? \"0\" + seconds : seconds}\r\n        name={showBreak ? name[1] : name[0]}\r\n      />\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(ClockContainer);\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Segment,\r\n  Label,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport const Controls = ({ onClickReset, onClickStartPause, working}) => (\r\n    <div>\r\n      \r\n      {working ? \r\n        <Button content='Pause' color='google plus' icon='pause' labelPosition='left' onClick={onClickStartPause} /> :\r\n        <Button content='Start' color='facebook' icon='play' labelPosition='left' onClick={onClickStartPause}  />}\r\n            \r\n       <Button content='Reset' onClick={onClickReset}></Button>\r\n       </div>\r\n);","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { hendleStartPause, hendleReset } from '../redux/actions';\r\n\r\nimport { Controls } from \"../presentational/Controls\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        working: state.working\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickStartPause: function(){\r\n            dispatch(hendleStartPause())\r\n        },\r\n        onClickReset: function(){\r\n            dispatch(hendleReset())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass ControlsContainer extends Component {\r\n    \r\n    \r\n\r\n    render(){\r\n        const { onClickReset, onClickStartPause, working} = this.props;\r\n        \r\n        return (\r\n            <Controls onClickReset={onClickReset} onClickStartPause={onClickStartPause} working={working}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlsContainer);","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { hendleSesionDecrease, hendleSesionIncrease } from '../redux/actions';\r\n\r\nimport { Buttons } from \"../presentational/Buttons\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onClickDecrease: function(){\r\n            dispatch(hendleSesionDecrease())\r\n        },\r\n        onClickIncrease: function(){\r\n            dispatch(hendleSesionIncrease())\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        sesionLength: state.sesionLength\r\n    }\r\n}\r\n\r\nclass SesionContainer extends Component {\r\n    render(){\r\n        const {onClickDecrease, onClickIncrease, sesionLength} = this.props;\r\n        return (\r\n            <Buttons onClickDecrease={onClickDecrease} onClickIncrease={onClickIncrease} length={sesionLength} title={\"Sesion Length\"}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SesionContainer);","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Segment,\r\n  Label,\r\n  Responsive,\r\n  Progress\r\n} from \"semantic-ui-react\";\r\n\r\nexport const Progres = ({procent}) => (\r\n    <Progress percent={procent} indicating />\r\n); ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Progres } from \"../presentational/Progress\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    breakLength: state.breakLength,\r\n    sesionLength: state.sesionLength,\r\n    clockTimeMinutes: state.clockTimeMinutes,\r\n    clockTimeSeconds: state.clockTimeSeconds,\r\n    breakTimeMinutes: state.breakTimeMinutes,\r\n    breakTimeSeconds: state.breakTimeSeconds,\r\n    showClock: state.showClock,\r\n    showBreak: state.showBreak\r\n    };\r\n};\r\n\r\nclass ProgresContainer extends Component {\r\n  render() {\r\n    const {\r\n      breakLength,\r\n      sesionLength,\r\n      clockTimeMinutes,\r\n      clockTimeSeconds,\r\n      breakTimeMinutes,\r\n      breakTimeSeconds,\r\n      showClock,\r\n      showBreak\r\n      \r\n    } = this.props;\r\n    \r\n    let procent = 0;\r\n    if (showClock){\r\n        procent = (clockTimeMinutes*60 + clockTimeSeconds)*100 / (sesionLength*60);\r\n    } \r\n    console.log(showBreak)\r\n    if (showBreak){\r\n        procent = (breakTimeMinutes*60 + breakTimeSeconds)*100 / (breakLength*60);\r\n     \r\n    }\r\n    return <Progres procent={procent} />;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ProgresContainer);\r\n","import React from \"react\";\r\nimport {\r\n \r\n  Header,\r\n  Image,\r\n  List,\r\n  Segment,\r\n  Label,\r\n  Responsive\r\n} from \"semantic-ui-react\";\r\nimport  BreakContainer  from \"../container/Break\";\r\nimport  ClockContainer  from \"../container/Clock\";\r\nimport  ControlsContainer  from \"../container/Controls\";\r\nimport  SesionContainer  from \"../container/Sesion\";\r\nimport  ProgresContainer from \"../container/Progres\";\r\n\r\n\r\nexport const Layout = () => (\r\n  <Responsive className=\"App\">\r\n    <Segment>\r\n     <Header as='h1'> Pomodoro Clock </Header>\r\n          <Responsive as={Segment.Group} maxWidth={650}> \r\n            <BreakContainer />\r\n            <ClockContainer />\r\n            <SesionContainer />\r\n          </Responsive>\r\n          <Responsive as={Segment.Group} minWidth={651} horizontal>\r\n            <BreakContainer />\r\n            <ClockContainer />\r\n            <SesionContainer />\r\n          </Responsive>\r\n        <ProgresContainer />\r\n      <ControlsContainer />\r\n    </Segment>\r\n  </Responsive>\r\n);\r\n","const defaultState = {\r\n  breakLength: 5,\r\n  sesionLength: 25,\r\n  clockTimeMinutes: 25,\r\n  clockTimeSeconds: 0,\r\n  breakTimeMinutes: 5,\r\n  breakTimeSeconds: 0,\r\n  working: false,\r\n  showClock: true,\r\n  showBreak: false\r\n};\r\n\r\nexport const reducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case \"breakdecrease\":\r\n      if (state.breakLength > 1 && state.breakTimeMinutes > 0) {\r\n        return {\r\n          ...state,\r\n          breakLength: state.breakLength - 1,\r\n          breakTimeMinutes: state.breakTimeMinutes - 1\r\n        };\r\n      } else {\r\n        return { ...state };\r\n      }\r\n\r\n    case \"breakincrease\":\r\n      if (state.breakLength < 60) {\r\n        return {\r\n          ...state,\r\n          breakLength: state.breakLength + 1,\r\n          breakTimeMinutes: state.breakTimeMinutes + 1\r\n        };\r\n      } else {\r\n        return { ...state };\r\n      }\r\n    case \"sesiondecrease\":\r\n      if (state.sesionLength > 1 && state.clockTimeMinutes > 0) {\r\n        return {\r\n          ...state,\r\n          sesionLength: state.sesionLength - 1,\r\n          clockTimeMinutes: state.clockTimeMinutes - 1\r\n        };\r\n      } else {\r\n        return { ...state };\r\n      }\r\n\r\n    case \"sesionincrease\":\r\n      if (state.sesionLength < 60) {\r\n        return {\r\n          ...state,\r\n          sesionLength: state.sesionLength + 1,\r\n          clockTimeMinutes: state.clockTimeMinutes + 1\r\n        };\r\n      } else {\r\n        return { ...state };\r\n      }\r\n    case \"startpause\":\r\n      return {\r\n        ...state,\r\n        working: !state.working\r\n      };\r\n    case \"ticksesion\":\r\n      if (state.clockTimeSeconds > 0) {\r\n        return {\r\n          ...state,\r\n          clockTimeSeconds: state.clockTimeSeconds - 1\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          clockTimeSeconds: 59,\r\n          clockTimeMinutes: state.clockTimeMinutes - 1\r\n        };\r\n      }\r\n\r\n    case \"tickbreak\":\r\n      if (state.breakTimeSeconds > 0) {\r\n        return {\r\n          ...state,\r\n          breakTimeSeconds: state.breakTimeSeconds - 1\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          breakTimeSeconds: 59,\r\n          breakTimeMinutes: state.breakTimeMinutes - 1\r\n        };\r\n      }\r\n    case \"stopclock\":\r\n      return {\r\n        ...state,\r\n        showClock: false,\r\n        showBreak: true\r\n      };\r\n    case \"stopbreak\":\r\n      return {\r\n        ...state,\r\n        showClock: true,\r\n        showBreak: false\r\n      };\r\n    case \"resetsesion\":\r\n      return {\r\n        ...state,\r\n        clockTimeMinutes: state.sesionLength,\r\n        clockTimeSeconds: 0\r\n      };\r\n    case \"resetbreak\":\r\n      return {\r\n        ...state,\r\n        breakTimeMinutes: state.breakLength,\r\n        breakTimeSeconds: 0\r\n      };\r\n    case \"reset\":\r\n      return {\r\n        ...defaultState\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Layout } from \"./presentational/Layout\";\nimport { reducer } from \"./redux/reducer\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Layout />\n        \n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}